#pragma checksum "C:\Users\JohanHernández-SEII\Documents\JOHAN\UMG\PROYECTO DE GRADUACIÓN\AdminSoccerLeague\TorneosAdmin.Web\Views\Tesoreria\PagosInscripciones.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "5e70feeda14b79a2f9f38518425f8c0c92b147b5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Tesoreria_PagosInscripciones), @"mvc.1.0.view", @"/Views/Tesoreria/PagosInscripciones.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\JohanHernández-SEII\Documents\JOHAN\UMG\PROYECTO DE GRADUACIÓN\AdminSoccerLeague\TorneosAdmin.Web\Views\_ViewImports.cshtml"
using TorneosAdmin.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\JohanHernández-SEII\Documents\JOHAN\UMG\PROYECTO DE GRADUACIÓN\AdminSoccerLeague\TorneosAdmin.Web\Views\_ViewImports.cshtml"
using TorneosAdmin.Web.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"5e70feeda14b79a2f9f38518425f8c0c92b147b5", @"/Views/Tesoreria/PagosInscripciones.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"21e66fed2d491451bfd1f247411f192a0ad0309d", @"/Views/_ViewImports.cshtml")]
    #nullable restore
    public class Views_Tesoreria_PagosInscripciones : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\n");
#nullable restore
#line 2 "C:\Users\JohanHernández-SEII\Documents\JOHAN\UMG\PROYECTO DE GRADUACIÓN\AdminSoccerLeague\TorneosAdmin.Web\Views\Tesoreria\PagosInscripciones.cshtml"
  
    ViewData["Title"] = "PagosInscripciones";
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("\n");
#nullable restore
#line 7 "C:\Users\JohanHernández-SEII\Documents\JOHAN\UMG\PROYECTO DE GRADUACIÓN\AdminSoccerLeague\TorneosAdmin.Web\Views\Tesoreria\PagosInscripciones.cshtml"
Write(Html.AntiForgeryToken());

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""page-header"">
    <h1>
        Pagos de Inscripciones
        <small>
            <i class=""ace-icon fa fa-angle-double-right""></i>
            Esta sección es para alta, baja y actulización de pagos de inscripciones.
        </small>
    </h1>
</div><!-- /.page-header -->

<div class=""row"">
    <div class=""col-xs-12"">
        <!-- PAGE CONTENT BEGINS -->
");
            WriteLiteral(@"        <h4>
            <i class=""ace-icon fas fa-hand-point-right icon-animated-hand-pointer blue""></i>
            <a id=""btnAgregaPago"" class=""blue""> Agregar Pago Inscripción </a>
        </h4>
        <br />
        <table id=""grid-table""></table>
        <div id=""grid-pager""></div>

        <!-- PAGE CONTENT ENDS -->
    </div><!-- /.col -->
</div><!-- /.row -->

");
            DefineSection("Scripts", async() => {
                WriteLiteral("\n    <!-- inline scripts related to this page -->\n    <script type=\"text/javascript\">\n        // Variable Globales\n        var listaCampeonatos = JSON.parse(\'");
#nullable restore
#line 46 "C:\Users\JohanHernández-SEII\Documents\JOHAN\UMG\PROYECTO DE GRADUACIÓN\AdminSoccerLeague\TorneosAdmin.Web\Views\Tesoreria\PagosInscripciones.cshtml"
                                      Write(ViewBag.CampeonatosLista);

#line default
#line hidden
#nullable disable
                WriteLiteral("\'.replace(/&quot;/g, \'\"\'));\n        var listaEquipos = JSON.parse(\'");
#nullable restore
#line 47 "C:\Users\JohanHernández-SEII\Documents\JOHAN\UMG\PROYECTO DE GRADUACIÓN\AdminSoccerLeague\TorneosAdmin.Web\Views\Tesoreria\PagosInscripciones.cshtml"
                                  Write(ViewBag.EquiposLista);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"'.replace(/&quot;/g, '""'));

        jQuery(function ($) {

            // boton para agrega un nuevo campeonato.
            $(""#btnAgregaPago"").on(""click"", function () {
                addRow();
            });

            var grid_selector = ""#grid-table"";
            var pager_selector = ""#grid-pager"";
            var parent_column = $(grid_selector).closest('[class*=""col-""]');

            //resize to fit page size
            $(window).on('resize.jqGrid', function () {
                $(grid_selector).jqGrid('setGridWidth', parent_column.width());
            });

            //resize on sidebar collapse/expand
            $(document).on('settings.ace.jqGrid', function (ev, event_name, collapsed) {
                if (event_name === 'sidebar_collapsed' || event_name === 'main_container_fixed') {
                    //setTimeout is for webkit only to give time for DOM changes and then redraw!!!
                    setTimeout(function () {
                        $(grid_selector).jqGrid('setGridWidth', ");
                WriteLiteral(@"parent_column.width());
                    }, 20);
                }
            })

            getColumnIndexByName = function (columnName) {
                var cm = jQuery(grid_selector).jqGrid('getGridParam', 'colModel'), i, l = cm.length;
                for (i = 0; i < l; i++) {
                    if (cm[i].name === columnName) {
                        return i; // return the index
                    }
                }
                return -1;
            }

            function getCampeonatos() {
                return listaCampeonatos;
            }

            function getEquipos() {
                return listaEquipos;
            }

            jQuery(grid_selector).jqGrid({
                url: ""/PagosInscripciones/ObtenerPagosIncripciones"",
                datatype: 'json',
                mtype: 'GET',
                height: 400,
                colNames: ['ID', 'Campeonato', 'Equipo', 'Foto', 'Monto de Inscripción', 'Monto de Garantía', 'Observacion', ''],
                colModel: [
");
                WriteLiteral(@"                    { key: true, hidden: true, name: 'id', index: 'id', editable: true },
                    { name: 'campeonatoID', index: 'campeonatoID', editable: true, edittype: 'select', formatter: 'select', editoptions: { value: getCampeonatos()}  },
                    { name: 'equipoID', index: 'equipoID', editable: true,  edittype: 'select', formatter: 'select', editoptions: { value: getEquipos() }},
                    { name: 'foto', jsonmap: 'equipoID', align: 'center', editable: true, edittype: ""custom"", editoptions: { enctype: 'multipart/form-data', custom_element: imageFormatEdit }, formatter: imageFormatEquipo, unformat: imageUnFormat },
                    { name: 'montoInscripcion', index: 'montoInscripcion', editable: true, editoptions: { size: ""20"", maxlength: ""50"" } },
                    { name: 'montoGarantia', index: 'montoGarantia', editable: true, editoptions: { size: ""20"", maxlength: ""50"" } },
                    { name: 'observacion', index: 'observacion',  editable: true, editopt");
                WriteLiteral(@"ions: { size: ""20"", maxlength: ""300"" } },
                    {
                        name: 'myac', width: 150, fixed: true, sortable: false, resize: false, formatter: 'actions',
                        formatoptions: {
                            key: true,
                            editbutton: true,
                            delbutton: true,
                            editformbutton: true,
                            editOptions: {
                                url: ""/PagosInscripciones/Editar"",
                                mtype: 'PUT',
                                viewPagerButtons: false,
                                closeAfterEdit: true,
                                recreateForm: true,
                                beforeShowForm: function (form) {
                                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=""widget-header"" />')
                                    form.find('#campeonatoID').attr(""disabled"", true)
             ");
                WriteLiteral(@"                       form.find('#equipoID').attr(""disabled"", true)
                                    style_edit_form(form);
                                },
                                errorTextFormat: FormatedorMensajesError
                            },
                            delOptions: {
                                url: ""/PagosInscripciones/Eliminar"",
                                mtype: 'PUT',
                                recreateForm: true,
                                width: 400,
                                beforeShowForm: function (form) {
                                    if (form.data('styled')) return false;

                                    form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=""widget-header"" />')
                                    style_delete_form(form);

                                    form.data('styled', true);

                                    form.find("".delmsg"").text(""¿Desea eliminar el pago de la inscr");
                WriteLiteral(@"ipción?"");
                                    form.closest('.ui-jqdialog').find(""#dData"").text('Eliminar');
                                },
                                errorTextFormat: FormatedorMensajesError
                            }
                        }
                    }
                ],

                viewrecords: true,
                rowNum: 10,
                rowList: [10, 20, 30],
                pager: pager_selector,
                shrinkToFit: true,
                autowidth: true,
                altRows: true,
                //toppager: true,

                multiselect: false,
                //multikey: ""ctrlKey"",
                //multiboxonly: true,

                loadComplete: function () {
                    var table = this;
                    var iCol = getColumnIndexByName('myac');

                    setTimeout(function () {
                        $(table).find("">tbody>tr.jqgrow>td:nth-child("" + (iCol + 1) + "")"")
                            .each(functi");
                WriteLiteral(@"on () {
                                $(""<div>"", {
                                    title: ""Imprimir"",
                                    mouseover: function () {
                                        $(this).addClass('ui-state-hover');
                                    },
                                    mouseout: function () {
                                        $(this).removeClass('ui-state-hover');
                                    },
                                    click: function (e) {
                                        var id = $(e.target).closest(""tr.jqgrow"").attr(""id"")
                                        window.open(""/Recibos/PagoInscripciones/"" + id.toString(16), '_blank');
                                    }
                                }
                                ).css({ ""margin-right"": ""10px"", float: ""left"", cursor: ""pointer"" })
                                    .addClass(""ui-pg-div ui-inline-custom"")
                                    .append('<span ");
                WriteLiteral(@"class=""ui-icon green fas fa-print""></span>')
                                    .prependTo($(this).children(""div""));
                            });
                        updatePagerIcons(table);
                        enableTooltips(table);
                    }, 0);
                },
                caption: ""Pagos Inscripciones"",

            });

            $(window).triggerHandler('resize.jqGrid');//trigger window resize to make the grid get the correct size

            function addRow() {
                // Get the currently selected row
                $(grid_selector).jqGrid('editGridRow', 'new', {
                    url: ""/PagosInscripciones/Crear"",
                    mtype: 'POST',
                    closeAfterAdd: true,
                    recreateForm: true,
                    viewPagerButtons: false,
                    beforeShowForm: function (form) {
                        form.closest('.ui-jqdialog').find('.ui-jqdialog-titlebar').wrapInner('<div class=""widget-header"" />')
        ");
                WriteLiteral(@"                style_edit_form(form);
                        form.find(""#tr_foto"").hide();
                    },
                    errorTextFormat: FormatedorMensajesError,
                });
            }

            $(document).one('ajaxloadstart.page', function (e) {
                $.jgrid.gridDestroy(grid_selector);
                $('.ui-jqdialog').remove();
            });
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
